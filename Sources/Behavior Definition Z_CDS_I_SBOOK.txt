//Possible implementation type is managed
//Specifying unique is mandatory (each operation can only be implemented once)
managed implementation in class zbp_cds_i_sbook unique;

//Enabling the strict mode (and version) to apply additional syntax checks; handled by
//the RAP framework; it is recommended that you use the most recent version
strict ( 2 );

//It is mandatory to specify an entity behavior definition for the RAP BO root entity.
define behavior for Z_CDS_I_SBOOK //alias <alias_name>

//Specifying the database table a RAP BO is based on (only available/mandatory in managed BOs);
persistent table zmy_a_sbook

//Specifying the locking mechanism for entities, e.g. to prevent a simultaneous modification.
lock master

//Controlling authorization that is to be implemented
//You can specify variants: global (e.g. for restricting certain operations) and/or
//instance (restrictions based on entity instances) or both of them (dedicated handler methods must be implemented)
authorization master ( instance )
//etag master <field_name>

//RAP BO operations
//Standard operations (Note: Read is implicitly enabled, no specification available)
{
   create;
   update;
   delete;

//Validations
//Checking the consitency of instances; validations are triggered based on conditions
//Conditions (one or more are possible) can be specified for create, update, delete operations and modified fields;
//Validations are always invoked during the save sequence
//field: validation is executed when the value of the specified field(s) are changed by a create or update operation.
//The execution order of validations is not fixed.
//If there is more than one validation triggered by the same condition, you cannot know which validation is executed first.
//In unmanaged scenarios, validations are only supported for draft instances, not for active instances.
//Update works only in combination with the trigger operation create.
validation validate_flight_date on save { field FlightDate; create; }

// for action
// result [1] result parameter upto 1 data set
action set_status result [1] $self;

// Static field attribute.
// The RAP BO does not allow consumers to change the values of the specified field or fields.
// This is independent from the standard operation the consumers wants to perform (update, create).
field ( readonly ) cancelled;

// Determination
// Modifying instances based on trigger conditions.
// Conditions (one or more are possible) can be specified for create, update, delete operations and modified fields.
// The triggering is possible for 'on modify' and 'on saveâ€™.
// Determinations are available for managed scenarios and for unmanaged scenarios with draft.
// They are not available for unmanaged, non-draft scenarios.
// The execution order of determinations is not fixed.
// For determinations defined as on save, trigger condition update; works only in combination with the trigger condition create
// Example:
// determination det1 on modify { update; delete; field field5, field6; }
// determination det2 on save { create; field field7, field8; }

determination default_status on save {create;}

  mapping for zmy_a_sbook
  {
    AirlineID = carrid;
    ConnectionID = connid;
    FlightDate = fldate;
    BookingID = bookid;
    PassengerName = passname;
    Cancelled = cancelled;
  }
}